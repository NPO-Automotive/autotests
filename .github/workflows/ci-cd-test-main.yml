name: CI/CD for Main Branch

on:
  pull_request:
    branches:
      - main
      - canary
  push:
    branches:
      - main
      - canary

permissions:
  contents: write
  pages: write
  id-token: write

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: false

      - name: Get Branch Name and Target Branch
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "TARGET_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUTOTEST_ACTIONS }}" | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 2222 89.23.4.133 >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: ssh -vvv -i ~/.ssh/id_rsa -p 2222 npo@89.23.4.133 "echo Connected successfully!"
        
      - name: Connect to Server and Clone Repositories
        run: |
          ssh -p 2222 npo@89.23.4.133 << 'EOF'
          cd ~
          rm -rf sep_erp_server sep_erp_client
          git clone git@github.com:your-org/sep_erp_server.git
          git clone git@github.com:your-org/sep_erp_client.git
          EOF

      - name: Push Target Branch to Server and Start Server
        run: |
          ssh -p 2222 npo@89.23.4.133 << 'EOF'
          cd ~/sep_erp_server
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          pnpm i
          nohup pnpm run start:dev > server.log 2>&1 &
          EOF

      - name: Start Client via SSH
        run: |
          ssh -p 2222 npo@89.23.4.133 << 'EOF'
          cd ~/sep_erp_client
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          pnpm i
          nohup pnpm run serve > client.log 2>&1 &
          EOF

      - name: Wait for Server and Client to Start
        run: sleep 30  # Adjust based on startup time

      - name: Merge Branch into Target Without Committing
        run: |
          ssh -p 2222 npo@89.23.4.133 << 'EOF'
          cd ~/sep_erp_server
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          git merge --no-commit --no-ff $BRANCH_NAME

          cd ~/sep_erp_client
          git checkout $TARGET_BRANCH
          git pull origin $TARGET_BRANCH
          git merge --no-commit --no-ff $BRANCH_NAME
          EOF

      - name: Verify Merge Status
        run: |
          ssh -p 2222 npo@89.23.4.133 << 'EOF'
          cd ~/sep_erp_server
          git status
          cd ~/sep_erp_client
          git status
          EOF

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.13.1'
          cache: 'npm'

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-
            playwright-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright dependencies
        run: sudo npx playwright install-deps

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Run Playwright tests with xvfb
        env:
          TEST_DIR: '.'
          BASE_URL: 'http://dev.pksep.ru/'
        run: xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" npm run test

      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: allure-results
          path: allure-results
          retention-days: 20

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20

      - name: Create index.html
        if: always()
        run: |
          mkdir -p allure-history
          echo '<meta http-equiv="refresh" content="0; URL=./latest/index.html">' > allure-history/index.html

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          force_orphan: true

      - name: Cleanup
        if: always()
        run: |
          git config --global --unset safe.directory || true
          rm -rf .git/modules/* || true
